//This version of code only support TFLite dense layer

#include <avr/pgmspace.h>

#define LAYER_COUNT          3

const PROGMEM uint16_t layerSize[] = { 150, 10, 5, 2 };

#define BUFFER_IN_SIZE          150
#define BUFFER_OUT_SIZE          10

#define QUANTIZE_ZERO_POINT          -1
#define QUANTIZE_SCALE          0.99607843

const int8_t layerWeightArray0[] PROGMEM = { 41, 13, 20, 98, 17, 5, 103, 30, 3, 53, 17, -12, 79, -7, -26, -29, 26, 53, 19, -28, 40, 8, 35, -6, -61, 50, -25, -95, 27, -65, -91, -38, -34, -63, -10, -74, -104, 3, -15, -46, 17, -62, -76, 7, -25, 26, -36, -24, 7, 13, 3, 63, -11, 57, -10, 27, 53, 35, 48, 48, 14, -5, 54, 60, -8, 27, 54, -15, -35, 79, 30, 27, 87, -9, -41, -5, -17, 39, 24, 29, 39, 9, 45, -26, 10, -33, 22, 38, 37, -5, 58, 43, -19, 14, 4, 4, -31, 26, 59, 35, -44, 21, -15, -37, 43, -39, -51, 28, 11, -25, 7, 27, 57, -25, 22, -7, -20, 11, -2, -20, 25, 10, 23, 5, -10, -30, 47, 46, 5, 5, -2, 20, 21, 23, 0, -2, -31, 5, 13, -8, 27, 11, -11, 32, -14, -21, 25, -23, 32, -10, 48, 25, 78, 75, -1, 30, 89, 47, 71, 79, 59, 25, -12, -3, 4, 43, 4, 67, -7, 38, -3, 41, 7, -2, 35, -10, 62, -19, 22, -16, 31, 35, 34, -34, 4, 14, 37, 69, -1, 5, 52, 24, -28, 54, -17, -23, -16, 8, 18, -25, 39, -5, 52, 7, 31, 40, 10, 89, 40, 20, 62, 32, 10, 16, 27, 82, 45, 12, -3, 15, 6, 40, 83, 32, 30, 71, 78, -5, 9, 69, 76, 10, 61, 76, 33, 16, 70, 66, 40, 42, 35, 57, 64, 59, 46, 77, -2, 16, 1, 24, 20, 70, 26, 11, 73, -10, -13, 71, -19, 52, 14, 75, 38, 77, 17, 46, 30, 66, 3, 19, 70, 24, 68, 8, 52, -20, -10, -15, 34, -11, 40, 33, 30, 11, 39, -5, 74, 20, 2, 40, 39, 65, 1, 41, 0, 30, 11, 73, 10, -7, 27, -22, 44, -43, -33, -17, 36, -40, 34, -15, 43, -2, 46, -3, 5, -6, -24, -8, 6, 31, -30, -2, 1, -21, -3, -10, 19, -20, -46, -24, 19, -26, -36, 5, -43, -47, 24, 29, -39, -17, -43, -26, -28, 5, 34, -45, 48, -23, 4, 28, -48, -32, 41, 1, -11, 6, 12, -14, -2, -14, -39, -16, 17, -13, 19, -30, 43, -42, 25, 24, -7, -3, 38, -13, -37, 15, 7, 46, 24, -5, 15, -33, 47, 39, -30, 39, -2, 22, -47, -24, -33, 25, -21, -17, -3, -8, -16, 38, -21, 16, -18, 8, -47, 2, 21, -42, 20, -42, 1, -30, 40, 36, -23, 11, 31, -6, 11, 12, 23, -18, 43, 6, -38, 0, 43, 33, -17, 13, 10, -8, -46, 43, -35, 32, 21, 9, 4, -23, 39, 17, 0, -29, 31, -30, 31, -38, -6, 15, -14, -10, 84, 22, 40, 102, 25, 26, 51, 16, -16, 26, 36, 30, 10, 42, 4, 27, 13, -14, 19, -29, 24, -43, 28, -33, -47, -19, 4, -94, 24, -72, -62, -46, -37, -63, -30, -51, -54, 20, -51, -96, -20, -28, -27, 24, 5, -9, 14, 3, -43, -29, -6, -12, -15, 53, -1, 0, 23, 74, 16, -30, 83, 19, -4, 70, -16, 49, 11, 46, 15, 34, 28, -39, 27, 6, 33, -6, -44, -19, 13, -7, 20, -9, -9, 7, -6, 17, 42, 12, 38, 19, 19, -11, 36, -12, 42, 44, -10, -21, -32, -11, 25, 11, -7, 20, -22, 43, -35, -20, -36, -22, 48, -5, -1, 31, 0, 24, 42, 15, 18, -28, -49, -37, 22, -7, 23, -21, -9, 16, 44, -45, -48, -7, 9, 5, 21, -48, 25, 26, -42, 22, -11, 39, -38, 27, -8, 17, 21, 20, 11, -26, 19, 0, -25, 9, -33, 7, -4, 36, -32, 14, 28, -17, 11, 14, -38, -20, 19, -27, 38, -24, 17, 47, 19, 15, -31, -27, 15, 20, -41, 43, 3, 2, -27, 36, -25, -13, 4, -37, -26, -4, 33, -27, -18, -21, 46, 25, -6, 46, -4, -47, -16, 14, -41, 21, 17, 0, -32, -27, -32, -20, -17, -27, -17, 1, 47, 29, 20, 36, 28, -29, 34, -47, -6, 6, 1, -47, -32, 16, 24, -36, -39, 16, 47, -19, 3, 40, -20, -13, -16, 7, -11, 24, -47, 24, 8, -23, 0, -19, -14, 5, -47, -45, 2, -48, 7, -34, -43, 39, 39, -22, -21, 26, -22, 32, 31, -46, -18, -19, 46, 26, 45, -34, 19, -33, -26, 25, -47, 30, 20, -31, -15, 25, 11, -15, 45, -43, 37, 11, 21, 26, -18, -19, 29, 40, 3, -47, 4, 43, -31, -46, -45, -2, -31, -26, 47, 3, 16, -15, -36, -4, -16, 39, -6, -46, 42, 17, -5, 27, 21, -22, -37, -41, -28, 16, 34, -20, -41, 41, -44, 19, 21, -7, 47, 25, 41, -41, -37, 17, 8, -44, -36, 46, 9, 10, 3, 22, -3, -3, 15, -6, 16, 2, 45, 13, 43, -35, -47, -25, 40, 0, -31, 37, -40, -36, -45, -15, -3, -29, 7, 0, -3, -31, -21, -22, 9, 39, 35, 3, 4, 29, -34, 9, 20, 27, 45, -8, 39, -38, -20, 4, 35, 24, 12, -36, 38, -6, -37, 14, 17, 5, -13, -31, 18, -4, -41, -7, -40, -21, -2, -12, -24, -7, -27, 15, 15, -42, 44, 15, -28, 32, -10, -31, -43, 7, 25, 10, -1, -30, 40, 24, -26, -20, 1, 12, -25, 0, -23, 15, 8, -32, -32, 18, 3, -47, 13, 43, 40, -3, -27, 39, 24, -4, 15, 43, 50, 58, 87, 27, 17, 30, -5, 8, 54, -7, 13, -7, -20, 22, 35, 10, 31, -68, 19, 12, -42, -39, -58, -46, 39, -14, -35, -33, -68, -78, 24, -74, -78, -19, -28, -59, 49, -78, -80, 22, -74, 10, -23, 17, -12, 29, 40, 57, -5, 38, 10, -34, -10, 22, -1, -5, 40, -28, 17, 17, 13, 50, 75, -7, 25, 65, 3, 40, 62, -43, 15, 48, 1, -14, 36, 25, 18, -24, 3, 12, 51, 4, -9, -1, 20, 49, -2, 25, 8, -33, 18, 34, -35, 34, 25, 13, -29, 10, 52, 48, 31, 13, 38, -27, -22, 30, 3, -28, -21, -13, 14, -15, -9, 25, 45, 24, -37, 3, 45, -16, 45, -6, -39, 11, 37, -1, -18, 25, -24, -35, -17, -49, -18, -11, -21, -29, -29, -30, 9, -40, -1, 20, -28, 20, -5, -40, -5, -22, 10, -9, 43, 35, -36, 53, 28, -65, -28, -30, -27, 4, 33, -14, 36, -9, 60, 35, -21, 21, 12, 9, 113, 53, 89, 87, -35, 34, 127, -2, 4, 70, -13, 26, 113, 3, 78, 44, 24, 87, 70, 28, 8, 4, -1, 5, -24, 69, 36, -29, -12, -49, 35, -3, -33, -8, 6, 15, -53, -16, -15, -14, 36, -35, -10, 16, -35, -16, -23, 20, -13, 39, -18, -14, 52, -23, 15, 3, 16, 41, 31, 52, -34, -27, 7, -26, 19, -11, -36, 42, -34, -22, 50, 5, 54, 59, 25, 39, 38, -24, 27, -26, -17, 29, 17, 17, 55, 38, 52, 40, -27, 5, 48, 19, -19, 63, -6, 28, 68, 67, 34, -16, -1, 22, 10, -15, 42, 63, -24, 62, -15, 19, 43, 73, 64, 73, -21, -11, 76, 26, 45, -21, 50, 67, 50, -17, 63, 65, 34, -41, 27, 34, -38, 34, 70, 35, -32, 32, -15, 22, 67, -34, 40, 10, -30, -10, -8, -23, -18, -28, -22, -53, -46, -41, -4, -83, 34, -23, -51, 25, -75, -82, 0, -40, -45, 31, -2, -30, 44, -86, -36, 9, -48, -57, -14, 5, -40, 26, 38, 58, 1, 43, 73, 49, 8, 46, 42, 20, 100, -1, 36, 26, 50, 6, 21, 5, -6, 67, 9, -21, 34, -38, 2, 62, 6, -4, -23, -28, 9, 64, -26, 13, 3, -41, 36, 11, -36, 38, 11, -38, 62, -9, 19, 31, -52, -27, 18, 44, -2, 51, 5, 2, -11, 0, 12, 1, -6, 45, -30, -40, -26, -35, 28, -15, -8, 42, -45, 3, 6, 26, -43, 3, -14, -3, 33, 43, 30, -17, -10, -14, -13, 44, 0, 28, 38, -13, -49, 8, -8, -20, -36, 1, 3, 33, 37, 22, 6, 37, -47, 4, 8, -3, -13, 33, 39, 25, 3, 22, 3, -36, -1, 42, -21, -5, -17, -28, -10, -39, -19, -47, 29, -41, -26, -20, 20, -23, 37, 8, -48, -45, 34, 20, 23, -15, -14, -28, 39, 14, -27, -10, 26, 39, -22, -38, 24, -5, 0, 5, 45, -13, -2, 37, 11, 16, 8, 6, 1, 37, -6, 16, 34, 18, 29, 31, -9, 12, -24, -43, -3, -18, -17, 45, 5, 9, 5, -10, -32, 26, -31, -38, 39, 34, 27, 3, -35, -43, 1, -23, -39, 43, 37, 1, -40, -23, -12, -25, -23, -4, 0, -21, 14, -33, 12, -22, -5, 43, -23, -26, -29, 30, 30, 14, -30, -3, 25, -26, -37, -24, 30, -40, -42, 14, 8, 45, -10, -34, 34, -22, 19, 10, -29, 30, 28, 46, -41, -41, 20, -37, -28, 45, 35, -10, 37, 26, -29, 40, 10, -16 };
const int8_t layerWeightArray1[] PROGMEM = { 6, 51, 33, -114, 21, -30, -73, 52, -113, -52, 89, 34, -19, 64, 62, 15, 90, -62, 61, -54, 62, -34, 57, 1, 43, 56, -60, 11, -45, -16, -20, -8, -40, -69, 46, 61, -71, 85, -82, -2, 127, -3, 9, 127, 42, 20, 107, -22, 79, 21 };
const int8_t layerWeightArray2[] PROGMEM = { 61, -13, -38, 9, -1, -5, 95, -54, -76, 127 };
const int8_t *const layerWeightArrays[] PROGMEM = {layerWeightArray0, layerWeightArray1, layerWeightArray2};

const int8_t layerBaisArray0[] PROGMEM = { 4, 30, 0, -1, 0, 0, 1, 18, 0, -1 };
const int8_t layerBaisArray1[] PROGMEM = { 17, -8, 0, 2, 2 };
const int8_t layerBaisArray2[] PROGMEM = { 6, -6 };
const int8_t *const layerBaisArrays[] PROGMEM = {layerBaisArray0, layerBaisArray1, layerBaisArray2};

const int8_t inputZeroPoints[] PROGMEM = { -1, -128, -128 };
const int8_t weightZeroPoints[] PROGMEM = { 0, 0, 0 };
const int8_t outputZeroPoints[] PROGMEM = { -128, -128, -88 };
const int32_t reduced_multipliers[] PROGMEM = { 28469, 16975, 17882 };
const uint8_t total_shifts[] PROGMEM = { 23, 22, 22 };
